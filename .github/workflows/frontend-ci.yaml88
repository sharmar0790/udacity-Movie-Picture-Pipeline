# Workflow name
name: Frontend Continuous Integration

env:
  # Set Node.js Version
  NODE_VERSION: '18.x'

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on push events to the main branch
  push:
    branches:
      - main

  # Automatic trigger on pull request events targeting the main branch
  # pull_request:
  #   branches:
  #     - main

# Jobs defined in the workflow
jobs:
  LINT:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-    
      - name: Install dependencies
        run: cd frontend && npm ci
      - name: Lint
        run: cd frontend && npm run lint

  TEST:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-    
      - name: Install dependencies
        run: cd frontend && npm ci
      - name: Run tests
        run: cd frontend && npm test

  BUILD:
    needs: [LINT, TEST]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-    

      - name: Install & Build
        run: | 
          cd frontend
          npm ci
          npm run build --if-present